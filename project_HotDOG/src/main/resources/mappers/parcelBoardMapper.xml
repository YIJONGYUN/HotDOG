<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 게시판 네임스페이스(사용영역) 설정 -->

<mapper namespace="com.ybm.hotdog.mappers.parcelBoardMapper">

	<!-- 게시물 목록 전체 조회하기 -->
	<select id="boardParcelListAll" resultType="Article">
		<include refid="pagingHeader"></include>
		SELECT article_no as
		articleNo, board_no as boardNo, Article.user_no as
		userNo,
		category_no as
		categoryNo, title, content, reg_date as regDate,
		hit_count as hitCount,
		"group", step, "order"
		<include refid="search"></include>
		ORDER BY
		"group"
		DESC, "order" ASC
		<include refid="pagingFooter"></include>
	</select>

	<sql id="pagingHeader">
		SELECT * FROM(
		SELECT ROWNUM AS rn, A.*FROM(
	</sql>
	<sql id="pagingFooter">
		)A
		)WHERE rn BETWEEN #{start} AND #{end}
	</sql>

	<sql id="search">
		<choose>
			<when test="searchOption == 'list'">
				FROM Article
				WHERE
				board_no = 2
			</when>
			<otherwise>
				FROM Article, Users
				WHERE
				board_no = 2 And
				Article.user_no = Users.user_no
				And
				${searchOption} LIKE
				'%'||#{keyword}||'%'
			</otherwise>
		</choose>
	</sql>
	<!-- 검색된 게시물 수 -->
	<select id="searchCount" resultType="Integer">
		SELECT count(article_no)
		<include refid="search"></include>
	</select>

	<!-- 댓글 전체 조회하기 -->
	<select id="listReply" resultType="Reply">
		SELECT reply_no, article_no,
		user_no as userNo, content, reg_date as regDate FROM Reply
		WHERE
		article_no = #{articleNo}
		ORDER BY reg_date
		desc
	</select>

	<!-- 게시물 상세보기 -->
	<select id="articleDetail" resultType="Article">
		SELECT article_no as
		articleNo, board_no as boardNo, user_no as userNo,
		category_no as
		categoryNo, title, content, reg_date as regDate, hit_count as
		hitCount,
		"group", step, "order"
		FROM Article
		WHERE article_no =
		#{articleNo}
	</select>

	<!-- 게시글 작성하기 -->
	<insert id="articleInsert">
		INSERT INTO Article(article_no, board_no, user_no,
		category_no, title,
		content, reg_date, hit_count, "group", step,
		"order")
		VALUES (seq_Article.nextVal, 2, 123, #{categoryNo}, #{title},
		#{content},
		sysdate, 0, seq_Article.currVal, 0, 0)
	</insert>

	<!-- 답글 구조 정하기 -->
	<update id="replyView">
		UPDATE Article SET "order" = "order"+1
		WHERE
		"group" =
		#{group} AND "order" > #{order}
	</update>

	<!-- 답글 작성하기 -->
	<insert id="articleReplyInsert">
		INSERT INTO Article(article_no, board_no, user_no,
		category_no, title,
		content, reg_date, hit_count, "group", step,
		"order")
		VALUES (seq_Article.nextVal, 2, 123, #{categoryNo}, #{title},
		#{content},
		sysdate, 0, #{group}, #{step}+1, #{order}+1)
	</insert>

	<!-- 댓글 작성하기 -->
	<insert id="replyInsert">
		INSERT INTO Reply(reply_no, article_no, user_no,
		content, reg_date)
		VALUES (seq_Article.nextVal, #{articleNo},
		123,
		#{content}, sysdate)
	</insert>

	<!-- 게시글 수정하기 -->
	<update id="articleUpdate">
		UPDATE Article SET category_no = #{categoryNo}, title
		= #{title},
		content = #{content},reg_date = sysdate WHERE article_no =
		#{articleNo}
	</update>

	<!-- 조회수 증가 -->
	<update id="increaseHitCount">
		UPDATE Article SET hit_count = hit_count+1 WHERE
		article_no =
		#{articleNo}
	</update>

	<!-- 게시글 삭제하기 -->
	<delete id="articleDelete">
		DELETE FROM Article WHERE article_no
		= #{articleNo}
	</delete>

</mapper>